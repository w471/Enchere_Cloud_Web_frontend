{"version":3,"file":"index.js","sources":["../src/index.tsx"],"sourcesContent":["import type {\n  PropsWithChildren,\n  PropsWithRef,\n  HTMLAttributes,\n  InputHTMLAttributes,\n  ReactNode,\n  CSSProperties,\n  RefObject,\n  MutableRefObject,\n  SetStateAction,\n  Dispatch,\n} from 'react';\nimport React, {\n  createContext,\n  forwardRef,\n  useCallback,\n  useContext,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n  useDeferredValue,\n  useId,\n} from 'react';\n\n/*\n * References:\n * [ARIA1.1#comboBox]: https://www.w3.org/TR/wai-aria-1.1/#combobox\n * [ARIA1.2#comboBox]: https://www.w3.org/TR/wai-aria-1.2/#combobox\n *\n * Low-level Components:\n * - ComboboxInput: The textbox input field\n * - Listbox: The container that holds the list of options\n * - ListboxOption: One listbox option\n * - Highlight: Highlighting of matching text of the listbox option\n *\n * High-level Components:\n * - Combobox: A container that you can pass all low-level components yourself (advanced use-cases)\n * - DatalistInput: A container that renders all low-level components for you (simple use-cases)\n */\n\n/*\n * \"Typically, the default state of a combobox is collapsed.\" [ARIA1.1#combobox]\n * If the developer does not manage the open state on its own, by default this component will collapse the listbox.\n * This ensures that the datalist input components (by default) matches the behavior of the native datalist element\n */\nconst DEFAULT_IS_EXPANDED = false;\n\nconst IS_PRODUCTION = process.env.NODE_ENV === 'production';\n\n/*\n * Utilities\n */\n\nconst contextRequiredWarning = (name: string) =>\n  `The ${name} component must be a child of Combobox. Please wrap the component inside Combobox to ensure that the required context is available.`;\n\n/**\n * This function is inspired by tiny-warning: https://github.com/alexreardon/tiny-warning\n */\nfunction assertWithWarning(condition: boolean, text: string): void {\n  // wrapping in production check for better dead code elimination\n  if (!IS_PRODUCTION) {\n    if (condition) {\n      return;\n    }\n\n    // check console for IE9 support which provides console\n    if (typeof console !== 'undefined') {\n      console.warn(text);\n    }\n\n    // Throwing an error and catching it immediately\n    // to improve debugging\n    // A consumer can use 'pause on caught exceptions'\n    // https://github.com/facebook/react/issues/4216\n    try {\n      throw Error(text);\n    } catch (x) {}\n  }\n}\n\n/**\n * Composes different event handlers into a single event handler.\n */\ntype HandleWith = <Event>(...fns: Array<((e: Event) => void) | undefined>) => (e: Event) => void;\nconst handleWith: HandleWith =\n  (...fns) =>\n  (e) =>\n    fns.forEach((fn) => fn && fn(e));\n\n/*\n * Hooks and context\n */\n\ntype ComboboxContext = {\n  contextAvailable: boolean; // Flag that context is available\n  listboxId?: string; // The element that describes the option list of the element. [ARIA1.1#combobox]\n  selectedItemId?: string; // The element that describes the selected option of the combobox.\n  isExpanded?: boolean;\n  currentInputValue?: string;\n};\n\nconst ComboboxContext = createContext<ComboboxContext>({\n  contextAvailable: true,\n  listboxId: '',\n  selectedItemId: '',\n  isExpanded: DEFAULT_IS_EXPANDED,\n  currentInputValue: '',\n});\n\nconst useComboboxContext = () => useContext(ComboboxContext);\n\n/**\n * Use this hook to control the open state and input value of the combobox.\n * Pass the properties down to the DataListInput component.\n */\nconst useComboboxControls = (params?: { isExpanded: boolean; initialValue?: string }) => {\n  const [isExpanded, setIsExpanded] = useStateRef(params?.isExpanded);\n  const [value, setValue] = useState(params?.initialValue || '');\n  return {\n    isExpanded,\n    value,\n    setIsExpanded,\n    setValue,\n  };\n};\n\n/**\n * An elegant way to style elements based on the current state of the component.\n * Inspired by react-router: https://v5.reactrouter.com/web/api/NavLink/classname-string-func\n */\ntype ClassNameFunction<Params> = (params: Params) => string;\ntype ClassName<Params> = HTMLAttributes<HTMLLIElement>['className'] | ClassNameFunction<Params>;\nfunction useClassNameStr<Params>(className: ClassName<Params>, params: Params) {\n  return useMemo(\n    () => (!className || typeof className === 'string' ? className : className(params)),\n    [params, className],\n  );\n}\n\ntype UseComboboxHelpersConfigParams = {\n  itemsRef: MutableRefObject<Item[]>;\n  listboxRef: RefObject<HTMLElement>;\n  comboboxInputRef: RefObject<HTMLInputElement>;\n  isExpandedRef: React.MutableRefObject<boolean>;\n  onSelect?: (item: Item) => void;\n  setIsExpanded?: (isExpanded: boolean) => void;\n  setValue?: (value: string) => void;\n  setSelectedItem?: (item: Item) => void;\n};\n\n/**\n * The helpers returned by this hook can be used\n * to construct a custom Combobox behavior to your liking.\n * Wrap the low-level components in the Combobox component\n * and pass the helpers down if you need them.\n */\nfunction useComboboxHelpers({\n  itemsRef,\n  listboxRef,\n  comboboxInputRef,\n  onSelect,\n  isExpandedRef,\n  setIsExpanded,\n  setValue,\n  setSelectedItem,\n}: UseComboboxHelpersConfigParams) {\n  /**\n   * onChange callback for input field\n   */\n  const handleChange = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      if (setValue) setValue(e.currentTarget.value);\n      if (setIsExpanded) setIsExpanded(true);\n    },\n    [setValue, setIsExpanded],\n  );\n\n  /**\n   * onFocus callback for input field\n   */\n  const expandOnFocus = useCallback(() => {\n    if (!isExpandedRef.current && setIsExpanded) setIsExpanded(true);\n  }, [setIsExpanded]);\n\n  const handleCloseDatalist = useCallback(() => {\n    if (isExpandedRef.current && setIsExpanded) setIsExpanded(false);\n  }, [setIsExpanded]);\n\n  /**\n   * onKeyDown/onKeyUp callback for window\n   */\n  const closeOnEscape = useCallback((e: KeyboardEvent) => {\n    if (e.key === 'Escape') handleCloseDatalist();\n  }, []);\n\n  /**\n   * onClick callback for window\n   */\n  const handleClickOutside = useCallback(\n    (e: MouseEvent) => {\n      if (!comboboxInputRef.current || !listboxRef.current) return;\n      const targetElement = e.target;\n      if (\n        !targetElement ||\n        (!listboxRef.current.contains(targetElement as HTMLElement) && targetElement !== comboboxInputRef.current)\n      ) {\n        handleCloseDatalist();\n      }\n    },\n    [handleCloseDatalist],\n  );\n\n  /**\n   * onFocus callback for window\n   */\n  const handleFocusOutside = useCallback(() => {\n    if (!comboboxInputRef.current || !listboxRef.current) return;\n    const activeElement = document.activeElement;\n    if (!activeElement || (!listboxRef.current.contains(activeElement) && activeElement !== comboboxInputRef.current)) {\n      handleCloseDatalist();\n    }\n  }, [handleCloseDatalist]);\n\n  /**\n   * Callback for item selection (enter/click)\n   */\n  const handleSelect = useCallback(\n    (item: Item) => {\n      // return focus to input field after selection\n      if (comboboxInputRef.current) comboboxInputRef.current.focus();\n      if (setValue) setValue(item.value);\n      if (setIsExpanded) setIsExpanded(false);\n      if (setSelectedItem) setSelectedItem(item);\n      if (onSelect) onSelect(item); // onSelect at last to allow override of previous state changes\n    },\n    [setValue, onSelect, setIsExpanded, setSelectedItem],\n  );\n\n  /**\n   * keyDown callback for input field\n   */\n  const handleKeyDownOnInput = useCallback(\n    (e: React.KeyboardEvent<HTMLInputElement>) => {\n      // Control+Option+Space is used by VoiceOver on Mac to open the menu\n      const isControlOptionSpace = e.code === 'Space' && e.ctrlKey && e.altKey;\n      const shouldVisitItems = e.key === 'ArrowDown' || isControlOptionSpace;\n      if (!listboxRef.current || !shouldVisitItems) return;\n      if (isControlOptionSpace) e.preventDefault();\n      if (isExpandedRef.current) {\n        const firstOption = listboxRef.current.firstElementChild as HTMLLIElement | null;\n        if (firstOption && typeof firstOption.focus === 'function') firstOption.focus();\n      } else if (setIsExpanded) {\n        setIsExpanded(true);\n        // wait for next tick (render)\n        window.setTimeout(() => {\n          if (!listboxRef.current) return;\n          const firstOption = listboxRef.current.firstElementChild as HTMLLIElement | null;\n          if (firstOption && typeof firstOption.focus === 'function') firstOption.focus();\n        });\n      }\n    },\n    [setIsExpanded],\n  );\n\n  /**\n   * keyDown callback for list element (listbox option)\n   * Uses keyDown instead of keyUp to support \"long-press\" to quickly navigate through list\n   */\n  const handleKeyDownOnListboxOption = useCallback(\n    (e: React.KeyboardEvent<HTMLLIElement>) => {\n      if (!itemsRef.current) return;\n      const item = itemsRef.current.find((item) => item.id === e.currentTarget.id);\n      if (!item) return;\n      if (e.key === 'Enter') return handleSelect(item); // Enter should act as Click. This will also submit a one input form correctly with the latest value.\n      if (!listboxRef.current || e.key === 'Escape' || e.key === 'Tab' || e.key === 'Shift') return; // Do nothing on meta keys\n\n      // Used for navigation\n      if (e.key === 'ArrowDown' || e.key === 'ArrowUp' || e.key === 'Alt') {\n        e.preventDefault(); // prevent safari from doing crazy text selection things\n        let nextNode: Element | null = null;\n        if (e.key === 'ArrowDown' || e.key === 'Alt') {\n          nextNode = e.currentTarget.nextElementSibling || listboxRef.current.firstElementChild;\n        } else {\n          nextNode = e.currentTarget.previousElementSibling || listboxRef.current.lastElementChild;\n        }\n\n        if (!nextNode) return;\n        const nextOption = nextNode as HTMLLIElement;\n        if (nextOption && typeof nextOption.focus === 'function') nextOption.focus();\n        return;\n      }\n\n      // Anything else should go to the input field\n      if (!comboboxInputRef.current) return;\n      comboboxInputRef.current.focus();\n      comboboxInputRef.current.dispatchEvent(new KeyboardEvent('keydown', { key: e.key }));\n    },\n    [handleSelect],\n  );\n\n  return {\n    closeOnEscape,\n    handleClickOutside,\n    handleFocusOutside,\n    handleChange,\n    expandOnFocus,\n    handleSelect,\n    handleKeyDownOnInput,\n    handleKeyDownOnListboxOption,\n  };\n}\n\n/*\n * Low-level components\n */\n\ntype ComboboxInputProps = Omit<InputHTMLAttributes<HTMLInputElement>, 'value'> & {\n  value?: string;\n};\n\n/**\n * The textbox input field.\n * Does currently not implement aria-activedescendant which is not obligatory for datalist input components.\n * Autocomplete off to prevent browser autocomplete from interfering with our own; can be overridden with props.\n */\nconst ComboboxInput = forwardRef<HTMLInputElement, PropsWithRef<ComboboxInputProps>>(\n  ({ value, ...props }, forwardedRef) => {\n    const { contextAvailable, listboxId, isExpanded } = useComboboxContext();\n    assertWithWarning(contextAvailable, contextRequiredWarning(ComboboxInput.name));\n\n    return (\n      <input\n        autoComplete=\"off\"\n        {...props}\n        ref={forwardedRef}\n        value={value}\n        type=\"text\"\n        role=\"combobox\"\n        aria-autocomplete=\"list\"\n        aria-haspopup=\"listbox\"\n        aria-expanded={isExpanded}\n        aria-controls={listboxId}\n      />\n    );\n  },\n);\nComboboxInput.displayName = 'ComboboxInput';\n\ntype HighlightProps = HTMLAttributes<HTMLElement> & {\n  currentInput?: string;\n  as?: 'mark' | 'span';\n};\n\n/**\n * Optional highlight component for the listbox option text.\n * Should be wrapped by ListboxOption. Provide ListBoxOption an aria-label to ensure accessibility, especially if using mark.\n */\nconst Highlight: React.FC<PropsWithChildren<HighlightProps>> = ({\n  children,\n  currentInput = '',\n  as = 'mark',\n  ...props\n}) => {\n  const markedChildren = useMemo(() => {\n    if (typeof children !== 'string') {\n      return children;\n    }\n    const index = children.toLowerCase().indexOf(currentInput.toLowerCase());\n    const inputLength = currentInput.length;\n    if (index === -1 || !inputLength) {\n      return children;\n    }\n    return (\n      <>\n        {children.substring(0, index)}\n        {as === 'mark' ? (\n          <mark {...props}>{children.substring(index, index + inputLength)}</mark>\n        ) : (\n          <span {...props}>{children.substring(index, inputLength)}</span>\n        )}\n        {children.substring(index + inputLength, children.length)}\n      </>\n    );\n  }, [currentInput, children]);\n\n  return <>{markedChildren}</>;\n};\n\ntype ListboxOptionClassNameParams = { isSelected: boolean };\ntype ListboxOptionProps = Omit<HTMLAttributes<HTMLLIElement>, 'className'> & {\n  className?: ClassName<ListboxOptionClassNameParams>;\n};\n\n/**\n * One listbox option.\n */\nconst ListboxOption = forwardRef<HTMLLIElement, PropsWithRef<ListboxOptionProps>>(\n  ({ children, id, className, ...props }, forwardedRef) => {\n    const { selectedItemId } = useComboboxContext();\n    const classNameStr = useClassNameStr<ListboxOptionClassNameParams>(className, {\n      isSelected: !!id && id === selectedItemId,\n    });\n\n    return (\n      <li {...props} ref={forwardedRef} id={id} className={classNameStr} role=\"option\">\n        {children}\n      </li>\n    );\n  },\n);\nListboxOption.displayName = 'ListboxOption';\n\ntype ListboxProps = HTMLAttributes<HTMLUListElement>;\n\n/**\n * The combobox popup list.\n */\nconst Listbox = forwardRef<HTMLUListElement, PropsWithRef<ListboxProps>>(({ children, ...props }, forwardedRef) => {\n  const { contextAvailable, listboxId, isExpanded } = useComboboxContext();\n  assertWithWarning(contextAvailable, contextRequiredWarning(Listbox.name));\n  const isExpandedRef = useRef(isExpanded);\n  const [hasExpanded, setHasExpanded] = useState(false);\n\n  useEffect(() => {\n    if (!isExpanded) {\n      setHasExpanded(false);\n    } else if (isExpanded && isExpanded !== isExpandedRef.current) {\n      setHasExpanded(true);\n    }\n    isExpandedRef.current = isExpanded; // drag pointer to the old value\n  }, [isExpanded]);\n\n  // TODO https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-live instead of title\n  return (\n    <ul\n      {...props}\n      ref={forwardedRef}\n      id={listboxId}\n      role=\"listbox\"\n      aria-live={hasExpanded ? props['aria-live'] || 'polite' : 'off'}\n    >\n      {children}\n    </ul>\n  );\n});\nListbox.displayName = 'Listbox';\n\n/*\n * Combobox - high-level component\n */\n\ntype ComboboxProps = {\n  listboxId?: ComboboxContext['listboxId'];\n  selectedItemId?: ComboboxContext['selectedItemId'];\n  isExpanded?: ComboboxContext['isExpanded'];\n  currentInputValue?: ComboboxContext['currentInputValue'];\n};\n\ntype Combobox = React.FC<PropsWithChildren<ComboboxProps>> & {\n  ComboboxInput: typeof ComboboxInput;\n  Listbox: typeof Listbox;\n  ListboxOption: typeof ListboxOption;\n  Highlight: typeof Highlight;\n};\n\n/**\n * A container that you can pass all low-level components yourself for advanced use-cases.\n * The Combobox provides the context for the combobox low-level components.\n */\nconst Combobox: Combobox = ({ currentInputValue, listboxId, selectedItemId, isExpanded = true, children }) => {\n  const id = useId();\n  return (\n    <ComboboxContext.Provider\n      value={{ currentInputValue, contextAvailable: true, listboxId: listboxId || id, selectedItemId, isExpanded }}\n    >\n      {children}\n    </ComboboxContext.Provider>\n  );\n};\n\nCombobox.ComboboxInput = ComboboxInput;\nCombobox.Listbox = Listbox;\nCombobox.ListboxOption = ListboxOption;\nCombobox.Highlight = Highlight;\n\n/*\n * DatalistInput - high-level component & its utilities\n */\n\n/**\n * Internal hook used to create a ref for a state value to allow access to the state value without triggering a re-render.\n */\nfunction useStateRef<S>(initialState: S): [S, (newState: S) => void, React.MutableRefObject<S>] {\n  const [state, setState] = useState(initialState);\n  const ref = useRef(initialState);\n  const setStateRef = (newState: S) => {\n    setState(newState);\n    ref.current = newState;\n  };\n  return [state, setStateRef, ref];\n}\n\n/**\n * Internal hook used to manipulate the value of the input field.\n */\nconst useInternalValue = (\n  value?: string,\n  setValue?: (str: string) => void | Dispatch<SetStateAction<string>>,\n): [string, (str: string) => void] => {\n  const [internalValue, setInternalValue] = useState(value || '');\n  const setValues = useCallback(\n    (newValue: string) => {\n      if (setValue) {\n        setValue(newValue);\n      } else {\n        setInternalValue(newValue);\n      }\n    },\n    [setValue],\n  );\n\n  useEffect(() => {\n    setInternalValue(value || '');\n  }, [value]);\n\n  return [internalValue, setValues];\n};\n\n/**\n * Internal hook to keep track of the selected item.\n */\nfunction useInternalSelectedItem(item?: Item): [Item | undefined, (item: Item) => void] {\n  const [selectedItem, setSelectedItem] = useState(item);\n\n  useEffect(() => {\n    setSelectedItem(item);\n  }, [item]);\n\n  return [selectedItem, setSelectedItem];\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntype Item = any & {\n  id: string;\n  value: string; // Used for filtering. Used for displaying and highlighting if node not provided.\n  node?: ReactNode; // Used for display.\n  label?: string; // If provided, will be used as the aria-label on the list element. If not provided, value will be used instead.\n};\n\ntype Filter = (items: Item[], value?: ComboboxInputProps['value']) => Item[];\n\n/**\n * Alternative function for matching the current input value (needle) and the values of the items array.\n * Returns true if item.value is not of type string (all items will be displayed and a custom filter must be used).\n */\nconst startsWithValueFilter: Filter = (items, value = '') =>\n  items.filter((item) =>\n    typeof item.value === 'string' ? item.value.substring(0, value.length).toLowerCase() === value.toLowerCase() : true,\n  );\n\n/**\n * Default function for matching the current input value (needle) and the values of the items array.\n * Returns true if item.value is not of type string (all items will be displayed and a custom filter must be used).\n */\nconst includesValueFilter: Filter = (items, value = '') =>\n  items.filter((item) =>\n    typeof item.value === 'string' ? item.value.toLowerCase().includes(value.toLocaleLowerCase()) : true,\n  );\n\nfunction useFilters(\n  items: Item[],\n  value: ComboboxInputProps['value'],\n  filters: Filter[],\n): [Item[], MutableRefObject<Item[]>] {\n  const filteredRef = useRef<Item[]>(items);\n  const filtered = useMemo(\n    () => filters.reduce((currentItems, filter) => filter(currentItems, value), items),\n    [items, filters, value],\n  );\n\n  useEffect(() => {\n    filteredRef.current = filtered;\n  }, [filtered]);\n\n  return [filtered, filteredRef];\n}\n\ntype LabelOptionProps =\n  | {\n      showLabel?: false;\n      label: string;\n    }\n  | {\n      showLabel?: true;\n      label: ReactNode;\n    };\n\ntype LabelProps = HTMLAttributes<HTMLLabelElement>;\n\n// eslint-disable-next-line @typescript-eslint/ban-types\ntype DatalistInputProps = LabelOptionProps &\n  Omit<HTMLAttributes<HTMLDivElement>, 'onSelect'> & {\n    items: Item[];\n    selectedItem?: Item;\n    value?: ComboboxInputProps['value'];\n    setValue?: UseComboboxHelpersConfigParams['setValue'];\n    onSelect?: UseComboboxHelpersConfigParams['onSelect'];\n    isExpanded?: ComboboxContext['isExpanded'];\n    setIsExpanded?: UseComboboxHelpersConfigParams['setIsExpanded'];\n    placeholder?: ComboboxInputProps['placeholder'];\n    filters?: Filter[];\n    inputProps?: ComboboxInputProps;\n    labelProps?: LabelProps;\n    listboxProps?: ListboxProps;\n    listboxOptionProps?: ListboxOptionProps;\n    isExpandedClassName?: string;\n    isCollapsedClassName?: string;\n    isExpandedStyle?: CSSProperties;\n    isCollapsedStyle?: CSSProperties;\n  };\n\n/**\n * DatalistInput implements all lower-level components for you and provides a simple API for controlling the combobox.\n * Note: Use the useComboboxControls hook to control the value and expanded state of the combobox.\n * DatalistInput implements the ARIA1.2#comboBox specification, including keyboard navigation with ArrowUp and ArrowDown.\n * DatalistInput does currently not implement aria-activedescendant but shifts the focus to the listbox options on ArrowUp and ArrowDown.\n * Note: tabIndex of all listbox options is set to -1 to allow the user to use tab or shift tab to jump out of the datalist without the need to tab through all options.\n */\nconst DatalistInput = forwardRef<HTMLDivElement, PropsWithRef<DatalistInputProps>>(\n  (\n    {\n      label,\n      showLabel = true,\n      items,\n      selectedItem,\n      value,\n      setValue,\n      onSelect,\n      placeholder,\n      isExpanded = DEFAULT_IS_EXPANDED,\n      setIsExpanded,\n      filters = [includesValueFilter],\n      inputProps,\n      labelProps,\n      listboxOptionProps,\n      listboxProps,\n      isExpandedClassName = '',\n      isCollapsedClassName = '',\n      isExpandedStyle,\n      isCollapsedStyle,\n      ...props\n    },\n    forwardedRef,\n  ) => {\n    const [internalIsExpanded, setInternalIsExpanded, isExpandedRef] = useStateRef(isExpanded);\n    const [internalValue, setInternalValue] = useInternalValue(value, setValue);\n    const internalTextboxId = useId();\n    const debounceValue = useDeferredValue(internalValue);\n    const [filteredItems, filteredItemsRef] = useFilters(items, debounceValue, filters);\n    const listboxRef = useRef<HTMLUListElement>(null);\n    const comboboxInputRef = useRef<HTMLInputElement>(null);\n    const [internalSelectedItem, setSelectedItem] = useInternalSelectedItem(selectedItem);\n\n    const setIsExpandedStates = useCallback(\n      (state: boolean) => (setIsExpanded ? setIsExpanded(state) : setInternalIsExpanded(state)),\n      [setIsExpanded],\n    );\n\n    const {\n      handleClickOutside,\n      handleFocusOutside,\n      closeOnEscape,\n      handleChange,\n      expandOnFocus,\n      handleSelect,\n      handleKeyDownOnInput,\n      handleKeyDownOnListboxOption,\n    } = useComboboxHelpers({\n      listboxRef,\n      comboboxInputRef,\n      isExpandedRef,\n      setValue: setInternalValue,\n      onSelect,\n      itemsRef: filteredItemsRef,\n      setIsExpanded: setIsExpandedStates,\n      setSelectedItem,\n    });\n\n    useEffect(() => {\n      setInternalIsExpanded(isExpanded);\n    }, [isExpanded]);\n\n    useEffect(() => {\n      // separate useEffect so we don't re-run it twice with each dependency change\n      window.addEventListener('click', handleClickOutside);\n      window.addEventListener('keyup', closeOnEscape);\n      return () => {\n        window.removeEventListener('click', handleClickOutside);\n        window.removeEventListener('keyup', closeOnEscape);\n      };\n    }, [handleClickOutside]);\n\n    useEffect(() => {\n      // separate useEffect so we don't re-run it twice with each dependency change\n      window.addEventListener('focusin', handleFocusOutside);\n      return () => {\n        window.removeEventListener('focusin', handleFocusOutside);\n      };\n    }, [handleFocusOutside]);\n\n    return (\n      <div {...props} ref={forwardedRef} className={`react-datalist-input__container ${props.className}`}>\n        <Combobox\n          listboxId={listboxProps?.id}\n          selectedItemId={internalSelectedItem?.id}\n          isExpanded={internalIsExpanded}\n          currentInputValue={internalValue}\n        >\n          {showLabel && (\n            <label\n              {...labelProps}\n              className={`react-datalist-input__label ${labelProps?.className}`}\n              htmlFor={inputProps?.id || internalTextboxId}\n            >\n              {label}\n            </label>\n          )}\n          <ComboboxInput\n            {...inputProps}\n            ref={comboboxInputRef}\n            id={inputProps?.id || internalTextboxId}\n            placeholder={placeholder}\n            value={internalValue}\n            onClick={handleWith(expandOnFocus, inputProps?.onClick)}\n            onFocus={handleWith(expandOnFocus, inputProps?.onFocus)}\n            onChange={handleWith(handleChange, inputProps?.onChange)}\n            onKeyDown={handleWith(handleKeyDownOnInput, inputProps?.onKeyDown)}\n            aria-label={!showLabel && typeof label === 'string' ? label : undefined}\n            className={`react-datalist-input__textbox ${inputProps?.className}`}\n          />\n          {((filteredItems.length && internalIsExpanded) || isCollapsedClassName || isCollapsedStyle) && (\n            <Listbox\n              {...listboxProps}\n              ref={listboxRef}\n              aria-hidden={internalIsExpanded}\n              className={`react-datalist-input__listbox ${\n                internalIsExpanded ? isExpandedClassName : isCollapsedClassName\n              } ${listboxProps?.className || ''}`}\n              style={{\n                ...(internalIsExpanded ? isExpandedStyle : isCollapsedStyle),\n                ...listboxProps?.style,\n              }}\n            >\n              {filteredItems.map((item) => (\n                <ListboxOption\n                  {...listboxOptionProps}\n                  aria-label={item.label || item.value}\n                  key={item.id}\n                  id={item.id}\n                  tabIndex={-1}\n                  onClick={handleWith(() => handleSelect(item), listboxOptionProps?.onClick)}\n                  onKeyDown={handleWith(handleKeyDownOnListboxOption, listboxOptionProps?.onKeyDown)}\n                  className={`react-datalist-input__listbox-option ${listboxOptionProps?.className}`}\n                >\n                  <Highlight currentInput={internalValue}>{item.node || item.value}</Highlight>\n                </ListboxOption>\n              ))}\n            </Listbox>\n          )}\n        </Combobox>\n      </div>\n    );\n  },\n);\nDatalistInput.displayName = 'DatalistInput';\n\nexport type {\n  DatalistInputProps,\n  ComboboxProps,\n  ComboboxInputProps,\n  ListboxProps,\n  ListboxOptionProps,\n  HighlightProps,\n  UseComboboxHelpersConfigParams,\n  Item,\n  Filter,\n};\n\nexport {\n  Combobox,\n  DatalistInput,\n  startsWithValueFilter,\n  includesValueFilter,\n  useFilters,\n  useComboboxContext,\n  useComboboxControls,\n  useComboboxHelpers,\n};\n\nexport default DatalistInput;\n"],"names":["createContext","useContext","useState","useMemo","useCallback","forwardRef","React","useRef","useEffect","useId","useDeferredValue"],"mappings":"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"}