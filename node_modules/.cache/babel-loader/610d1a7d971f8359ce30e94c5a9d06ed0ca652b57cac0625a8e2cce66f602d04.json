{"ast":null,"code":"var _jsxFileName = \"E:\\\\Sandratra\\\\ITU\\\\S5\\\\Gestion_entreprise\\\\Achat_vente-Tovo2-\\\\frontend\\\\src\\\\View\\\\Page\\\\Fournisseur\\\\page\\\\PFDBonLivraison.jsx\",\n  _s = $RefreshSig$();\nimport { Fragment, useState, useEffect, useRef } from \"react\";\nimport { useNavigate, useParams } from \"react-router\";\nimport Header from \"../../../Template/Appro/Header\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PFDBonLivraison = () => {\n  _s();\n  const navigate = useNavigate();\n  const params = useParams();\n  const [details, setDetails] = useState([]);\n  const checkBoxesRefs = useRef([]);\n  const dateInputsRefs = useRef([]);\n  const outQttInputsRefs = useRef([]);\n  class BonLivraison {\n    constructor(a, b, c) {\n      this.details_bon_commande_fournisseur_id = a;\n      this.qtt_livre = b;\n      this.date_livraison = c;\n    }\n  }\n\n  //     # Il faut savoir que la qtt qu'il essaye de sortir ne dÃ©passe pas le stock\n  const generateBonLivraison = () => {\n    let bon_livraison_arrays = [];\n    checkBoxesRefs.current.map((element, index) => {\n      if (element.checked) bon_livraison_arrays.push(new BonLivraison(details[index].iddetails_bon_commande_fournisseur, +outQttInputsRefs.current[index].value));\n    });\n    let content = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    content.body = JSON.stringify(bon_sortie_arrays);\n    fetch(\"http://127.0.0.1:3000/generateBonSortie\", content).then(response => {\n      console.log(response.status);\n      if (response.status !== 200) {\n        throw new Error(response);\n      } else if (response.status === 200) return response.json();\n    }).then(data => {\n      navigate('/menu');\n    }).catch(error => {\n      alert(\"La quantite que vous essayez de sortir est superieur a la commande\");\n    });\n  };\n  const generateInputField = index => {\n    let copie_outQttInputs = [...outQttInputs];\n    copie_outQttInputs[index] = !copie_outQttInputs[index];\n    setOutQttInputs(copie_outQttInputs);\n  };\n  useEffect(() => {\n    let content = {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    fetch(\"http://127.0.0.1:3000/getProformatDetailWithoutBonLivraison/\" + params.idProformat, content).then(response => {\n      return response.json();\n    }).then(json => {\n      setDetails(json.allProformatDetails);\n      console.log(json.allWithBcmd);\n\n      // filling the outQttInputs with false values so they are all hidden in the first place\n      // let array = [json.allProformatDetails.length];\n      // array.fill(false);\n      // setOutQttInputs(array);\n    });\n  }, []);\n\n  // Gestion erreur / loading\n  if (details === undefined) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading for fetching the data from server\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      border: \"1\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Qtt en stock disponible\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Qtt sortie\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Nom article\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Qualite\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: details.map((element, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: element.qtt\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: element.out_qtt\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: element.nomarticle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: element.qualite\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              onChange: () => {\n                generateInputField(index);\n              },\n              ref: el => checkBoxesRefs.current[index] = el,\n              name: \"checkBoxes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 25\n          }, this), checkBoxesRefs.current[index].checked ? /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              ref: el => outQttInputsRefs.current[index] = el\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 72\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 68\n          }, this) : '', checkBoxesRefs.current[index].checked ? /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"date\",\n              ref: el => dateInputsRefs.current[index] = el\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 72\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 68\n          }, this) : '']\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: generateBonSortie,\n      children: \"Valider bon sortie\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 9\n  }, this);\n};\n_s(PFDBonLivraison, \"dL4boJ/XT3IOoDEMATz8a3FUT4o=\", false, function () {\n  return [useNavigate, useParams];\n});\n_c = PFDBonLivraison;\nexport default PFDBonLivraison;\nvar _c;\n$RefreshReg$(_c, \"PFDBonLivraison\");","map":{"version":3,"names":["Fragment","useState","useEffect","useRef","useNavigate","useParams","Header","PFDBonLivraison","navigate","params","details","setDetails","checkBoxesRefs","dateInputsRefs","outQttInputsRefs","BonLivraison","constructor","a","b","c","details_bon_commande_fournisseur_id","qtt_livre","date_livraison","generateBonLivraison","bon_livraison_arrays","current","map","element","index","checked","push","iddetails_bon_commande_fournisseur","value","content","method","headers","body","JSON","stringify","bon_sortie_arrays","fetch","then","response","console","log","status","Error","json","data","catch","error","alert","generateInputField","copie_outQttInputs","outQttInputs","setOutQttInputs","idProformat","allProformatDetails","allWithBcmd","undefined","qtt","out_qtt","nomarticle","qualite","el","generateBonSortie"],"sources":["E:/Sandratra/ITU/S5/Gestion_entreprise/Achat_vente-Tovo2-/frontend/src/View/Page/Fournisseur/page/PFDBonLivraison.jsx"],"sourcesContent":["import { Fragment ,useState,useEffect, useRef} from \"react\";\r\nimport { useNavigate, useParams } from \"react-router\";\r\nimport Header from \"../../../Template/Appro/Header\";\r\n\r\nconst PFDBonLivraison = () => {\r\n    const navigate = useNavigate();\r\n    const params = useParams();\r\n    const [details, setDetails] = useState([]);\r\n    \r\n    const checkBoxesRefs = useRef([]);\r\n    const dateInputsRefs = useRef([]);\r\n    const outQttInputsRefs = useRef([]);\r\n\r\n    class BonLivraison{\r\n        constructor(a,b,c){\r\n            this.details_bon_commande_fournisseur_id = a;\r\n            this.qtt_livre = b;\r\n            this.date_livraison = c;\r\n        }\r\n\r\n        details_bon_commande_fournisseur_id;\r\n        out_qtt;\r\n        date_livraison;\r\n    }\r\n\r\n\r\n    //     # Il faut savoir que la qtt qu'il essaye de sortir ne dÃ©passe pas le stock\r\n    const generateBonLivraison = () => {\r\n        let bon_livraison_arrays = [];\r\n        checkBoxesRefs.current.map( (element,index) => {\r\n            if(element.checked)\r\n            bon_livraison_arrays.push(new BonLivraison(details[index].iddetails_bon_commande_fournisseur,+outQttInputsRefs.current[index].value))\r\n        });\r\n        \r\n        let content = {\r\n            method : \"POST\",\r\n            headers : {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n        };\r\n\r\n        content.body = JSON.stringify(bon_sortie_arrays);\r\n        \r\n        fetch(\"http://127.0.0.1:3000/generateBonSortie\",content)\r\n        .then(response => {\r\n            console.log(response.status);\r\n            if(response.status!==200){\r\n                throw new Error(response);\r\n            }\r\n\r\n            else if(response.status===200)\r\n                return response.json();\r\n        })\r\n        .then(data => {\r\n            navigate('/menu');  \r\n        })\r\n        .catch(error => {\r\n            alert(\"La quantite que vous essayez de sortir est superieur a la commande\")\r\n        })\r\n    }\r\n\r\n    const generateInputField =(index) => {\r\n        let copie_outQttInputs = [...outQttInputs];\r\n        copie_outQttInputs[index] = !copie_outQttInputs[index];\r\n        setOutQttInputs(copie_outQttInputs)\r\n    }\r\n    \r\n    useEffect(() => {\r\n        let content = {\r\n            method : \"GET\",\r\n            headers : {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n        };\r\n  \r\n        fetch(\"http://127.0.0.1:3000/getProformatDetailWithoutBonLivraison/\"+params.idProformat, content)\r\n        .then((response)=>{\r\n            return response.json();\r\n        })\r\n        .then((json)=>{\r\n            setDetails(json.allProformatDetails)\r\n            console.log(json.allWithBcmd);\r\n\r\n            // filling the outQttInputs with false values so they are all hidden in the first place\r\n            // let array = [json.allProformatDetails.length];\r\n            // array.fill(false);\r\n            // setOutQttInputs(array);\r\n        })\r\n    }, [])\r\n\r\n    // Gestion erreur / loading\r\n    if(details === undefined){\r\n        return <p>Loading for fetching the data from server</p>\r\n    }\r\n    \r\n    return(\r\n        <Fragment>\r\n            <Header/>\r\n            <table border='1'>\r\n                <thead>\r\n                    <tr>\r\n                        <th>Qtt en stock disponible</th>\r\n                        <th>Qtt sortie</th>\r\n                        <th>Nom article</th>\r\n                        <th>Qualite</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                {details.map( (element,index) =>(\r\n                    <tr key={index}>\r\n                        <td>{element.qtt}</td>\r\n                        <td>{element.out_qtt}</td>\r\n                        <td>{element.nomarticle}</td>\r\n                        <td>{element.qualite}</td>\r\n                        <td><input type=\"checkbox\" onChange={() =>  {generateInputField(index); }} ref={ el => (checkBoxesRefs.current[index] = el) } name=\"checkBoxes\" /></td>\r\n                        { checkBoxesRefs.current[index].checked ?  <td><input type=\"number\" ref={ el => (outQttInputsRefs.current[index] = el) }  /></td> : '' }\r\n                        { checkBoxesRefs.current[index].checked ?  <td><input type=\"date\" ref={ el => (dateInputsRefs.current[index] = el) }  /></td> : '' }\r\n                    </tr>\r\n                ))}\r\n                </tbody>\r\n            </table>\r\n\r\n            <button onClick={generateBonSortie}>Valider bon sortie</button>\r\n        </Fragment>\r\n    );\r\n}\r\nexport default PFDBonLivraison;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}