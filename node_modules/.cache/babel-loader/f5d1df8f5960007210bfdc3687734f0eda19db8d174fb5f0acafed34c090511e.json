{"ast":null,"code":"var _jsxFileName = \"E:\\\\Sandratra\\\\ITU\\\\S5\\\\Gestion_entreprise\\\\Achat_vente-Tovo2-\\\\frontend\\\\src\\\\View\\\\Page\\\\Fournisseur\\\\ProformatDetailsBcmd.jsx\",\n  _s = $RefreshSig$();\nimport { Fragment, useState, useEffect, useRef } from \"react\";\nimport { useParams } from \"react-router\";\nimport { Link } from \"react-router-dom\";\nimport Header from \"../../Template/Appro/Header\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProformatDetailsBcmd = () => {\n  _s();\n  const params = useParams();\n  const [details, setDetails] = useState([]);\n  const [outQttInputs, setOutQttInputs] = useState([]);\n  const checkBoxesRefs = useRef([]);\n  const outQttInputsRefs = useRef([]);\n  class BonSortie {\n    constructor(a, b) {\n      this.details_bon_commande_fournisseur_id = a;\n      this.out_qtt = b;\n    }\n  }\n  const generateBonSortie = () => {\n    let bon_sortie_arrays = [];\n    console.log(checkBoxesRefs.current[0].checked);\n    checkBoxesRefs.current.map((element, index) => {\n      // console.log(element);\n      // if(element.current.checked)\n      //     bon_sortie_arrays.push(new BonSortie(details[index].iddetails_bon_commande_fournisseur,outQttInputsRefs.current[index].value))\n    });\n    console.log(bon_sortie_arrays);\n  };\n  const generateInputField = index => {\n    let copie_outQttInputs = [...outQttInputs];\n    copie_outQttInputs[index] = !copie_outQttInputs[index];\n    setOutQttInputs(copie_outQttInputs);\n  };\n  useEffect(() => {\n    let content = {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    fetch(\"http://127.0.0.1:3000/getDpfBcmd/\" + params.idProformat, content).then(response => {\n      return response.json();\n    }).then(json => {\n      setDetails(json.allWithBcmd);\n\n      // filling the outQttInputs with false values so they are all hidden in the first place\n      let array = [json.allWithBcmd.length];\n      array.fill(false);\n      setOutQttInputs(array);\n    });\n  }, []);\n\n  // Gestion erreur / loading\n  if (details === undefined) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading for fetching the data from server\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      border: \"1\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Qtt\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Prix avec augmentation 30%\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Qualite\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Montant HT\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Montant TVA\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Montant TTC\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Quantite a sortir\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: details.map((element, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: element.qtt\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: element.pu_30\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: element.qualite\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: element.ht\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: element.tva\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: element.ttc\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 25\n          }, this), outQttInputs[index] ? /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              ref: el => outQttInputsRefs.current[index] = el\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 54\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 50\n          }, this) : '', /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              onChange: () => {\n                generateInputField(index);\n              },\n              ref: el => checkBoxesRefs.current[index] = el,\n              name: \"checkBoxes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 25\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: generateBonSortie,\n      children: \"Valider bon sortie\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n};\n_s(ProformatDetailsBcmd, \"r2xCuDkvIyeLG3hJs0lScyZ6HmQ=\", false, function () {\n  return [useParams];\n});\n_c = ProformatDetailsBcmd;\nexport default ProformatDetailsBcmd;\nvar _c;\n$RefreshReg$(_c, \"ProformatDetailsBcmd\");","map":{"version":3,"names":["Fragment","useState","useEffect","useRef","useParams","Link","Header","ProformatDetailsBcmd","params","details","setDetails","outQttInputs","setOutQttInputs","checkBoxesRefs","outQttInputsRefs","BonSortie","constructor","a","b","details_bon_commande_fournisseur_id","out_qtt","generateBonSortie","bon_sortie_arrays","console","log","current","checked","map","element","index","generateInputField","copie_outQttInputs","content","method","headers","fetch","idProformat","then","response","json","allWithBcmd","array","length","fill","undefined","qtt","pu_30","qualite","ht","tva","ttc","el"],"sources":["E:/Sandratra/ITU/S5/Gestion_entreprise/Achat_vente-Tovo2-/frontend/src/View/Page/Fournisseur/ProformatDetailsBcmd.jsx"],"sourcesContent":["import { Fragment ,useState,useEffect, useRef} from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Header from \"../../Template/Appro/Header\";\r\n\r\nconst ProformatDetailsBcmd = () => {\r\n    const params = useParams();\r\n    const [details, setDetails] = useState([]);\r\n    const [outQttInputs,setOutQttInputs] = useState([]);\r\n    \r\n    const checkBoxesRefs = useRef([]);\r\n    const outQttInputsRefs = useRef([]);\r\n\r\n    class BonSortie{\r\n        constructor(a,b){\r\n            this.details_bon_commande_fournisseur_id = a;\r\n            this.out_qtt = b;\r\n        }\r\n\r\n        details_bon_commande_fournisseur_id;\r\n        out_qtt;\r\n    }\r\n\r\n    const generateBonSortie = () => {\r\n        let bon_sortie_arrays = [];\r\n        console.log(checkBoxesRefs.current[0].checked);\r\n        checkBoxesRefs.current.map( (element,index) => {\r\n            // console.log(element);\r\n            // if(element.current.checked)\r\n            //     bon_sortie_arrays.push(new BonSortie(details[index].iddetails_bon_commande_fournisseur,outQttInputsRefs.current[index].value))\r\n        });\r\n        console.log(bon_sortie_arrays);\r\n    }\r\n\r\n    const generateInputField =(index) => {\r\n        let copie_outQttInputs = [...outQttInputs];\r\n        copie_outQttInputs[index] = !copie_outQttInputs[index];\r\n        setOutQttInputs(copie_outQttInputs)\r\n    }\r\n    \r\n    useEffect(() => {\r\n        let content = {\r\n            method : \"GET\",\r\n            headers : {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n        };\r\n  \r\n        fetch(\"http://127.0.0.1:3000/getDpfBcmd/\"+params.idProformat, content)\r\n        .then((response)=>{\r\n            return response.json();\r\n        })\r\n        .then((json)=>{\r\n            setDetails(json.allWithBcmd)\r\n            \r\n            // filling the outQttInputs with false values so they are all hidden in the first place\r\n            let array = [json.allWithBcmd.length];\r\n            array.fill(false);\r\n            setOutQttInputs(array);\r\n        })\r\n    }, [])\r\n\r\n    // Gestion erreur / loading\r\n    if(details === undefined){\r\n        return <p>Loading for fetching the data from server</p>\r\n    }\r\n    \r\n    return(\r\n        <Fragment>\r\n            <Header/>\r\n            <table border='1'>\r\n                <thead>\r\n                    <tr>\r\n                        <th>Qtt</th>\r\n                        <th>Prix avec augmentation 30%</th>\r\n                        <th>Qualite</th>\r\n                        <th>Montant HT</th>\r\n                        <th>Montant TVA</th>\r\n                        <th>Montant TTC</th>\r\n                        <th>Quantite a sortir</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                {details.map( (element,index) =>(\r\n                    <tr key={index}>\r\n                        <td>{element.qtt}</td>\r\n                        <td>{element.pu_30}</td>\r\n                        <td>{element.qualite}</td>\r\n                        <td>{element.ht}</td>\r\n                        <td>{element.tva}</td>\r\n                        <td>{element.ttc}</td>\r\n                        { outQttInputs[index] ?  <td><input type=\"number\" ref={ el => (outQttInputsRefs.current[index] = el) }  /></td> : '' }\r\n                        <td><input type=\"checkbox\" onChange={() =>  {generateInputField(index); }} ref={ el => (checkBoxesRefs.current[index] = el) } name=\"checkBoxes\" /></td>\r\n                    </tr>\r\n                ))}\r\n                </tbody>\r\n            </table>\r\n\r\n            <button onClick={generateBonSortie}>Valider bon sortie</button>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default ProformatDetailsBcmd;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}