{"ast":null,"code":"var _jsxFileName = \"E:\\\\Sandratra\\\\ITU\\\\S5\\\\Gestion_entreprise\\\\Achat_vente-Tovo2-\\\\frontend\\\\src\\\\View\\\\Page\\\\Fournisseur\\\\page\\\\ProformatHavingBcmd.jsx\";\nimport React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Header from \"../../../Template/Departement/Header\";\nimport ProformatFournisseur from \"../../proforma/ProformatFournisseur\";\nimport ListPf from \"../component/ListPF\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProformatHavingBcmd = () => {\n  // const [allProformat, setAllProformat] = useState([]);\n\n  // //    Get all proformat which have bon commande inside its details\n  // useEffect(() => {\n  //   var content = {\n  //       method : \"GET\",\n  //       headers : {\n  //           \"Content-Type\": \"application/json\"\n  //       },\n  //   };\n\n  //   fetch(\"http://127.0.0.1:3000/getProformatWithBonCommande\", content)\n  //   .then((response)=>{\n  //       return response.json();\n  //   })\n  //   .then((json)=>{\n  //       setAllProformat(json.allProformat)\n  //       console.log(allProformat);\n  //   })\n  // }, [])\n\n  // return(\n  //     <React.Fragment>\n  //         <Header />\n  //         {allProformat.map( (element,index) =>(\n  //             <div className=\"container\" key={index}>\n  //                 <ProformatFournisseur details={element} />\n  //                 <Link to={'/pfBcmd/'+element.idproformat_fournisseur} >Détails</Link>\n  //             </div>\n  //         ))}\n  //     </React.Fragment>\n  // );\n\n  return /*#__PURE__*/_jsxDEV(ListPf, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n_c = ProformatHavingBcmd;\nexport default ProformatHavingBcmd;\nvar _c;\n$RefreshReg$(_c, \"ProformatHavingBcmd\");","map":{"version":3,"names":["React","useEffect","useState","Link","Header","ProformatFournisseur","ListPf","ProformatHavingBcmd"],"sources":["E:/Sandratra/ITU/S5/Gestion_entreprise/Achat_vente-Tovo2-/frontend/src/View/Page/Fournisseur/page/ProformatHavingBcmd.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Header from \"../../../Template/Departement/Header\";\r\nimport ProformatFournisseur from \"../../proforma/ProformatFournisseur\";\r\nimport ListPf from \"../component/ListPF\";\r\n\r\nconst ProformatHavingBcmd = () => {\r\n    // const [allProformat, setAllProformat] = useState([]);\r\n\r\n\r\n    // //    Get all proformat which have bon commande inside its details\r\n    // useEffect(() => {\r\n    //   var content = {\r\n    //       method : \"GET\",\r\n    //       headers : {\r\n    //           \"Content-Type\": \"application/json\"\r\n    //       },\r\n    //   };\r\n\r\n    //   fetch(\"http://127.0.0.1:3000/getProformatWithBonCommande\", content)\r\n    //   .then((response)=>{\r\n    //       return response.json();\r\n    //   })\r\n    //   .then((json)=>{\r\n    //       setAllProformat(json.allProformat)\r\n    //       console.log(allProformat);\r\n    //   })\r\n    // }, [])\r\n    \r\n\r\n    // return(\r\n    //     <React.Fragment>\r\n    //         <Header />\r\n    //         {allProformat.map( (element,index) =>(\r\n    //             <div className=\"container\" key={index}>\r\n    //                 <ProformatFournisseur details={element} />\r\n    //                 <Link to={'/pfBcmd/'+element.idproformat_fournisseur} >Détails</Link>\r\n    //             </div>\r\n    //         ))}\r\n    //     </React.Fragment>\r\n    // );\r\n\r\n    return(\r\n        <ListPf>\r\n            \r\n        </ListPf>\r\n    );\r\n}\r\nexport default ProformatHavingBcmd;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,IAAI,QAAQ,kBAAkB;AACvC,OAAOC,MAAM,MAAM,sCAAsC;AACzD,OAAOC,oBAAoB,MAAM,qCAAqC;AACtE,OAAOC,MAAM,MAAM,qBAAqB;AAAC;AAEzC,MAAMC,mBAAmB,GAAG,MAAM;EAC9B;;EAGA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAGA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,oBACI,QAAC,MAAM;IAAA;IAAA;IAAA;EAAA,QAEE;AAEjB,CAAC;AAAA,KAzCKA,mBAAmB;AA0CzB,eAAeA,mBAAmB;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}