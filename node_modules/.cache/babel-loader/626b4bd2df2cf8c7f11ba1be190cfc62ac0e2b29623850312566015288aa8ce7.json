{"ast":null,"code":"var _jsxFileName = \"E:\\\\Sandratra\\\\ITU\\\\S5\\\\Gestion_entreprise\\\\Achat_vente-Tovo2-\\\\frontend\\\\src\\\\View\\\\Page\\\\Fournisseur\\\\component\\\\ListPF.jsx\",\n  _s = $RefreshSig$();\nimport React, { Component } from 'react';\nimport { Link } from \"react-router-dom\";\nimport Header from \"../../../Template/Departement/Header\";\nimport ProformatFournisseur from \"../../proforma/ProformatFournisseur\";\n\n// liste simple\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ListPf = props => {\n  _s();\n  const [allProformat, setAllProformat] = useState([]);\n\n  //    Get all proformat which have bon commande inside its details\n  useEffect(() => {\n    var content = {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    fetch(\"http://127.0.0.1:3000/\" + props.linkToData, content).then(response => {\n      return response.json();\n    }).then(json => {\n      setAllProformat(json.allProformat);\n      console.log(allProformat);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), allProformat.map((element, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(ProformatFournisseur, {\n        details: element\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: props.linkToDetail + element.idproformat_fournisseur,\n        children: \"D\\xE9tails\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n_s(ListPf, \"jPt7QyWlolzT54KFOQmJfXsbX4c=\");\n_c = ListPf;\nexport default ListPf;\nvar _c;\n$RefreshReg$(_c, \"ListPf\");","map":{"version":3,"names":["React","Component","Link","Header","ProformatFournisseur","ListPf","props","allProformat","setAllProformat","useState","useEffect","content","method","headers","fetch","linkToData","then","response","json","console","log","map","element","index","linkToDetail","idproformat_fournisseur"],"sources":["E:/Sandratra/ITU/S5/Gestion_entreprise/Achat_vente-Tovo2-/frontend/src/View/Page/Fournisseur/component/ListPF.jsx"],"sourcesContent":["import React, { Component } from 'react'\r\nimport { Link } from \"react-router-dom\";\r\nimport Header from \"../../../Template/Departement/Header\";\r\nimport ProformatFournisseur from \"../../proforma/ProformatFournisseur\";\r\n\r\n// liste simple\r\nconst ListPf = (props) => {\r\n    const [allProformat, setAllProformat] = useState([]);\r\n\r\n\r\n    //    Get all proformat which have bon commande inside its details\r\n    useEffect(() => {\r\n      var content = {\r\n          method : \"GET\",\r\n          headers : {\r\n              \"Content-Type\": \"application/json\"\r\n          },\r\n      };\r\n\r\n      fetch(\"http://127.0.0.1:3000/\"+props.linkToData, content)\r\n      .then((response)=>{\r\n          return response.json();\r\n      })\r\n      .then((json)=>{\r\n          setAllProformat(json.allProformat)\r\n          console.log(allProformat);\r\n      })\r\n    }, [])\r\n    \r\n\r\n    return(\r\n        <React.Fragment>\r\n            <Header />\r\n            {allProformat.map( (element,index) =>(\r\n                <div className=\"container\" key={index}>\r\n                    <ProformatFournisseur details={element} />\r\n                    <Link to={props.linkToDetail+element.idproformat_fournisseur} >DÃ©tails</Link>\r\n                </div>\r\n            ))}\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default ListPf;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,IAAI,QAAQ,kBAAkB;AACvC,OAAOC,MAAM,MAAM,sCAAsC;AACzD,OAAOC,oBAAoB,MAAM,qCAAqC;;AAEtE;AAAA;AACA,MAAMC,MAAM,GAAIC,KAAK,IAAK;EAAA;EACtB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGC,QAAQ,CAAC,EAAE,CAAC;;EAGpD;EACAC,SAAS,CAAC,MAAM;IACd,IAAIC,OAAO,GAAG;MACVC,MAAM,EAAG,KAAK;MACdC,OAAO,EAAG;QACN,cAAc,EAAE;MACpB;IACJ,CAAC;IAEDC,KAAK,CAAC,wBAAwB,GAACR,KAAK,CAACS,UAAU,EAAEJ,OAAO,CAAC,CACxDK,IAAI,CAAEC,QAAQ,IAAG;MACd,OAAOA,QAAQ,CAACC,IAAI,EAAE;IAC1B,CAAC,CAAC,CACDF,IAAI,CAAEE,IAAI,IAAG;MACVV,eAAe,CAACU,IAAI,CAACX,YAAY,CAAC;MAClCY,OAAO,CAACC,GAAG,CAACb,YAAY,CAAC;IAC7B,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAGN,oBACI,QAAC,KAAK,CAAC,QAAQ;IAAA,wBACX,QAAC,MAAM;MAAA;MAAA;MAAA;IAAA,QAAG,EACTA,YAAY,CAACc,GAAG,CAAE,CAACC,OAAO,EAACC,KAAK,kBAC7B;MAAK,SAAS,EAAC,WAAW;MAAA,wBACtB,QAAC,oBAAoB;QAAC,OAAO,EAAED;MAAQ;QAAA;QAAA;QAAA;MAAA,QAAG,eAC1C,QAAC,IAAI;QAAC,EAAE,EAAEhB,KAAK,CAACkB,YAAY,GAACF,OAAO,CAACG,uBAAwB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAgB;IAAA,GAFjDF,KAAK;MAAA;MAAA;MAAA;IAAA,QAIxC,CAAC;EAAA;IAAA;IAAA;IAAA;EAAA,QACW;AAEzB,CAAC;AAAA,GAnCKlB,MAAM;AAAA,KAANA,MAAM;AAqCZ,eAAeA,MAAM;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}